openapi: 3.0.0
info:
  title: Clash of Clans API
  description: |
    Check out <a href="https://developer.clashofclans.com/#/getting-started" target="_parent">Getting Started</a> for instructions and links to other resources. Clash of Clans API uses <a href="https://jwt.io/" target="_blank">JSON Web Tokens</a> for authorizing the requests. Tokens are created by developers on <a href="https://developer.clashofclans.com/#/account" target="_parent">My Account</a> page and must be passed in every API request in Authorization HTTP header using Bearer authentication scheme. Correct Authorization header looks like this: "Authorization: Bearer API_TOKEN".
  version: v1
  termsOfService: http://supercell.com/en/terms-of-service/
host: api.clashofclans.com
basePath: /v1
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
tags:
  -
    name: clans
    description: Access clan specific information
  -
    name: players
    description: Access player specific information
  -
    name: leagues
    description: Access league information
  -
    name: locations
    description: Access global and local rankings
  -
    name: goldpass
    description: Access information about gold pass
  -
    name: esports
    description: Esports related APIs

components:
  responses:
    InMaintenanceSpec   :
      description: Service is temprorarily unavailable because of maintenance.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientError'
    UnknownExceptionSpec:
      description: Unknown error happened when handling the request.
      schema     :
        $ref: '#/components/schemas/ClientError'
    RequestThrottledSpec:
      description: |
        Request was throttled, because amount of requests was above the threshold defined for the used API token.
      schema     :
        $ref: '#/components/schemas/ClientError'
    NotFoundSpec        :
      description: Resource was not found.
      schema     :
        $ref: '#/components/schemas/ClientError'
    ForbiddenSpec       :
      description: |
        Access denied, either because of missing/incorrect credentials or used API token does not grant access to the requested resource.
      schema     :
        $ref: '#/components/schemas/ClientError'
    BadRequestSpec      :
      description: Client provided incorrect parameters for the request.
      schema     :
        $ref: '#/components/schemas/ClientError'
  schemas:
    WarLeagueList:
      type: array
      items:
        $ref: '#/components/schemas/WarLeague'
    WarLeague:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        id:
          type: integer
    JsonLocalizedName:
      type: object
    ServiceVersion:
      type: object
      properties:
        major:
          type: integer
        minor:
          type: integer
        content:
          type: integer
    LabelList:
      type: array
      items:
        $ref: '#/components/schemas/Label'
    Label:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        id:
          type: integer
        iconUrls:
          type: object
    ClanCapitalRaidSeasons:
      type: array
      items:
        $ref: '#/components/schemas/ClanCapitalRaidSeason'
    ClanCapitalRaidSeason:
      type: object
      properties:
        attackLog:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonAttackLogList'
        defenseLog:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonDefenseLogList'
        state:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        capitalTotalLoot:
          type: integer
        raidsCompleted:
          type: integer
        totalAttacks:
          type: integer
        enemyDistrictsDestroyed:
          type: integer
        offensiveReward:
          type: integer
        defensiveReward:
          type: integer
        members:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonMemberList'
    ClanCapitalRaidSeasonMemberList:
      type: array
      items:
        $ref: '#/components/schemas/ClanCapitalRaidSeasonMember'
    ClanCapitalRaidSeasonMember:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        attacks:
          type: integer
        attackLimit:
          type: integer
        bonusAttackLimit:
          type: integer
        capitalResourcesLooted:
          type: integer
    ClanCapitalRaidSeasonDefenseLogList:
      type: array
      items:
        $ref: '#/components/schemas/ClanCapitalRaidSeasonDefenseLogEntry'
    ClanCapitalRaidSeasonDefenseLogEntry:
      type: object
      properties:
        attacker:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonClanInfo'
        attackCount:
          type: integer
        districtCount:
          type: integer
        districtsDestroyed:
          type: integer
        districts:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonDistrictList'
    ClanCapitalRaidSeasonDistrictList:
      type: array
      items:
        $ref: '#/components/schemas/ClanCapitalRaidSeasonDistrict'
    ClanCapitalRaidSeasonDistrict:
      type: object
      properties:
        stars:
          type: integer
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        id:
          type: integer
        destructionPercent:
          type: integer
        attackCount:
          type: integer
        totalLooted:
          type: integer
        attacks:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonAttackList'
        districtHallLevel:
          type: integer
    ClanCapitalRaidSeasonAttackList:
      type: array
      items:
        $ref: '#/components/schemas/ClanCapitalRaidSeasonAttack'
    ClanCapitalRaidSeasonAttack:
      type: object
      properties:
        attacker:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonAttacker'
        destructionPercent:
          type: integer
        stars:
          type: integer
    ClanCapitalRaidSeasonAttacker:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
    ClanCapitalRaidSeasonClanInfo:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        level:
          type: integer
        badgeUrls:
          type: object
    ClanCapitalRaidSeasonAttackLogList:
      type: array
      items:
        $ref: '#/components/schemas/ClanCapitalRaidSeasonAttackLogEntry'
    ClanCapitalRaidSeasonAttackLogEntry:
      type: object
      properties:
        defender:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonClanInfo'
        attackCount:
          type: integer
        districtCount:
          type: integer
        districtsDestroyed:
          type: integer
        districts:
          $ref: '#/components/schemas/ClanCapitalRaidSeasonDistrictList'
    Location:
      type: object
      properties:
        localizedName:
          type: string
        id:
          type: integer
        name:
          type: string
        isCountry:
          type: boolean
        countryCode:
          type: string
    Replay:
      type: object
      properties:
        replayData:
          $ref: '#/components/schemas/JsonNode'
        replayTag:
          type: string
    JsonNode:
      type: object
    ClanCapitalRankingList:
      type: array
      items:
        $ref: '#/components/schemas/ClanCapitalRanking'
    ClanCapitalRanking:
      type: object
      properties:
        clanCapitalPoints:
          type: integer
        clanPoints:
          type: integer
    WarStatusList:
      type: array
      items:
        $ref: '#/components/schemas/WarStatus'
    WarStatus:
      type: object
      properties:
        clanTag:
          type: string
        statusCode:
          type: integer
        enemyClanTag:
          type: string
        warState:
          type: string
          enum:
            - CLAN_NOT_FOUND
            - ACCESS_DENIED
            - NOT_IN_WAR
            - IN_MATCHMAKING
            - ENTER_WAR
            - MATCHED
            - PREPARATION
            - WAR
            - IN_WAR
            - ENDED
        timestamp:
          type: string
    LocationList:
      type: array
      items:
        $ref: '#/components/schemas/Location'
    ClanMemberList:
      type: array
      items:
        $ref: '#/components/schemas/ClanMember'
    ClanMember:
      type: object
      properties:
        league:
          $ref: '#/components/schemas/League'
        builderBaseLeague:
          $ref: '#/components/schemas/BuilderBaseLeague'
        tag:
          type: string
        name:
          type: string
        role:
          type: string
          enum:
            - NOT_MEMBER
            - MEMBER
            - LEADER
            - ADMIN
            - COLEADER
        townHallLevel:
          type: integer
        expLevel:
          type: integer
        clanRank:
          type: integer
        previousClanRank:
          type: integer
        donations:
          type: integer
        donationsReceived:
          type: integer
        trophies:
          type: integer
        builderBaseTrophies:
          type: integer
        playerHouse:
          $ref: '#/components/schemas/PlayerHouse'
    PlayerHouse:
      type: object
      properties:
        elements:
          $ref: '#/components/schemas/PlayerHouseElementList'
    PlayerHouseElementList:
      type: array
      items:
        $ref: '#/components/schemas/PlayerHouseElement'
    PlayerHouseElement:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - GROUND
            - ROOF
            - FOOT
            - DECO
    BuilderBaseLeague:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        id:
          type: integer
    League:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        id:
          type: integer
        iconUrls:
          type: object
    LeagueSeasonList:
      type: array
      items:
        $ref: '#/components/schemas/LeagueSeason'
    LeagueSeason:
      type: object
      properties:
        id:
          type: string
    BuilderBaseLeagueList:
      type: array
      items:
        $ref: '#/components/schemas/BuilderBaseLeague'
    VerifyTokenRequest:
      type: object
      properties:
        token:
          type: string
    VerifyTokenResponse:
      type: object
      properties:
        tag:
          type: string
        token:
          type: string
        status:
          type: string
    Clan:
      type: object
      properties:
        warLeague:
          $ref: '#/components/schemas/WarLeague'
        capitalLeague:
          $ref: '#/components/schemas/CapitalLeague'
        memberList:
          $ref: '#/components/schemas/ClanMemberList'
        tag:
          type: string
        clanCapitalPoints:
          type: integer
        requiredTrophies:
          type: integer
        requiredBuilderBaseTrophies:
          type: integer
        requiredTownhallLevel:
          type: integer
        isFamilyFriendly:
          type: boolean
        clanLevel:
          type: integer
        warWinStreak:
          type: integer
        warWins:
          type: integer
        warTies:
          type: integer
        warLosses:
          type: integer
        clanPoints:
          type: integer
        clanBuilderBasePoints:
          type: integer
        warFrequency:
          type: string
          enum:
            - UNKNOWN
            - ALWAYS
            - MORE_THAN_ONCE_PER_WEEK
            - ONCE_PER_WEEK
            - LESS_THAN_ONCE_PER_WEEK
            - NEVER
            - ANY
        isWarLogPublic:
          type: boolean
        chatLanguage:
          $ref: '#/components/schemas/Language'
        labels:
          $ref: '#/components/schemas/LabelList'
        name:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        type:
          type: string
          enum:
            - OPEN
            - INVITE_ONLY
            - CLOSED
        members:
          type: integer
        description:
          type: string
        clanCapital:
          $ref: '#/components/schemas/ClanCapital'
        badgeUrls:
          type: object
    ClanCapital:
      type: object
      properties:
        capitalHallLevel:
          type: integer
        districts:
          $ref: '#/components/schemas/ClanDistrictDataList'
    ClanDistrictDataList:
      type: array
      items:
        $ref: '#/components/schemas/ClanDistrictData'
    ClanDistrictData:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        id:
          type: integer
        districtHallLevel:
          type: integer
    Language:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
        languageCode:
          type: string
    CapitalLeague:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        id:
          type: integer
    ClanWar:
      type: object
      properties:
        clan:
          $ref: '#/components/schemas/WarClan'
        opponent:
          $ref: '#/components/schemas/WarClan'
        teamSize:
          type: integer
        attacksPerMember:
          type: integer
        battleModifier:
          type: string
          enum:
            - NONE
            - HARD_MODE
        startTime:
          type: string
        state:
          type: string
          enum:
            - CLAN_NOT_FOUND
            - ACCESS_DENIED
            - NOT_IN_WAR
            - IN_MATCHMAKING
            - ENTER_WAR
            - MATCHED
            - PREPARATION
            - WAR
            - IN_WAR
            - ENDED
        endTime:
          type: string
        preparationStartTime:
          type: string
    WarClan:
      type: object
      properties:
        destructionPercentage:
          $ref: '#/components/schemas/Float'
        tag:
          type: string
        name:
          type: string
        badgeUrls:
          type: object
        clanLevel:
          type: integer
        attacks:
          type: integer
        stars:
          type: integer
        expEarned:
          type: integer
        members:
          $ref: '#/components/schemas/ClanWarMemberList'
    ClanWarMemberList:
      type: array
      items:
        $ref: '#/components/schemas/ClanWarMember'
    ClanWarMember:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        mapPosition:
          type: integer
        townhallLevel:
          type: integer
        opponentAttacks:
          type: integer
        bestOpponentAttack:
          $ref: '#/components/schemas/ClanWarAttack'
        attacks:
          $ref: '#/components/schemas/ClanWarAttackList'
    ClanWarAttackList:
      type: array
      items:
        $ref: '#/components/schemas/ClanWarAttack'
    ClanWarAttack:
      type: object
      properties:
        order:
          type: integer
        attackerTag:
          type: string
        defenderTag:
          type: string
        stars:
          type: integer
        destructionPercentage:
          type: integer
        duration:
          type: integer
    Float:
      type: object
    ClanBuilderBaseRankingList:
      type: array
      items:
        $ref: '#/components/schemas/ClanBuilderBaseRanking'
    ClanBuilderBaseRanking:
      type: object
      properties:
        clanPoints:
          type: integer
        clanBuilderBasePoints:
          type: integer
    PlayerBuilderBaseRankingList:
      type: array
      items:
        $ref: '#/components/schemas/PlayerBuilderBaseRanking'
    PlayerBuilderBaseRanking:
      type: object
      properties:
        builderBaseLeague:
          $ref: '#/components/schemas/BuilderBaseLeague'
        clan:
          $ref: '#/components/schemas/PlayerRankingClan'
        tag:
          type: string
        name:
          type: string
        expLevel:
          type: integer
        rank:
          type: integer
        previousRank:
          type: integer
        builderBaseTrophies:
          type: integer
    PlayerRankingClan:
      type: object
      properties:
        tag:
          type: string
        name:
          type: string
        badgeUrls:
          type: object
    ClanList:
      type: array
      items:
        $ref: '#/components/schemas/Clan'
    PlayerRankingList:
      type: array
      items:
        $ref: '#/components/schemas/PlayerRanking'
    PlayerRanking:
      type: object
      properties:
        league:
          $ref: '#/components/schemas/League'
        clan:
          $ref: '#/components/schemas/PlayerRankingClan'
        attackWins:
          type: integer
        defenseWins:
          type: integer
        tag:
          type: string
        name:
          type: string
        expLevel:
          type: integer
        rank:
          type: integer
        previousRank:
          type: integer
        trophies:
          type: integer
    LeagueList:
      type: array
      items:
        $ref: '#/components/schemas/League'
    ClanWarLog:
      type: array
      items:
        $ref: '#/components/schemas/ClanWarLogEntry'
    ClanWarLogEntry:
      type: object
      properties:
        clan:
          $ref: '#/components/schemas/WarClan'
        opponent:
          $ref: '#/components/schemas/WarClan'
        teamSize:
          type: integer
        attacksPerMember:
          type: integer
        battleModifier:
          type: string
          enum:
            - NONE
            - HARD_MODE
        endTime:
          type: string
        result:
          type: string
          enum:
            - LOSE
            - WIN
            - TIE
    GoldPassSeason:
      type: object
      properties:
        startTime:
          type: string
        endTime:
          type: string
    DeepLinkCreationRequest:
      type: object
      properties:
        playerTags:
          $ref: '#/components/schemas/StringList'
        clanTag:
          type: string
        opponentClanTag:
          type: string
    StringList:
      type: array
      items:
        type: string
    String:
      type: object
    DeepLinkCreationResponse:
      type: object
      properties:
        link:
          type: string
    ClanWarLeagueGroup:
      type: object
      properties:
        tag:
          type: string
        state:
          type: string
          enum:
            - GROUP_NOT_FOUND
            - NOT_IN_WAR
            - PREPARATION
            - WAR
            - ENDED
        season:
          type: string
        clans:
          $ref: '#/components/schemas/ClanWarLeagueClanList'
        rounds:
          $ref: '#/components/schemas/ClanWarLeagueRoundList'
    ClanWarLeagueRoundList:
      type: array
      items:
        $ref: '#/components/schemas/ClanWarLeagueRound'
    ClanWarLeagueRound:
      type: object
      properties:
        warTags:
          $ref: '#/components/schemas/StringList'
    ClanWarLeagueClanList:
      type: array
      items:
        $ref: '#/components/schemas/ClanWarLeagueClan'
    ClanWarLeagueClan:
      type: object
      properties:
        tag:
          type: string
        clanLevel:
          type: integer
        name:
          type: string
        members:
          $ref: '#/components/schemas/ClanWarLeagueClanMemberList'
        badgeUrls:
          type: object
    ClanWarLeagueClanMemberList:
      type: array
      items:
        $ref: '#/components/schemas/ClanWarLeagueClanMember'
    ClanWarLeagueClanMember:
      type: object
      properties:
        tag:
          type: string
        townHallLevel:
          type: integer
        name:
          type: string
    ClanRankingList:
      type: array
      items:
        $ref: '#/components/schemas/ClanRanking'
    ClanRanking:
      type: object
      properties:
        clanLevel:
          type: integer
        clanPoints:
          type: integer
        location:
          $ref: '#/components/schemas/Location'
        members:
          type: integer
        tag:
          type: string
        name:
          type: string
        rank:
          type: integer
        previousRank:
          type: integer
        badgeUrls:
          type: object
    CapitalLeagueList:
      type: array
      items:
        $ref: '#/components/schemas/CapitalLeague'
    Player:
      type: object
      properties:
        league:
          $ref: '#/components/schemas/League'
        builderBaseLeague:
          $ref: '#/components/schemas/BuilderBaseLeague'
        clan:
          $ref: '#/components/schemas/PlayerClan'
        role:
          type: string
          enum:
            - NOT_MEMBER
            - MEMBER
            - LEADER
            - ADMIN
            - COLEADER
        warPreference:
          type: string
          enum:
            - OUT
            - IN
        attackWins:
          type: integer
        defenseWins:
          type: integer
        townHallLevel:
          type: integer
        townHallWeaponLevel:
          type: integer
        legendStatistics:
          $ref: '#/components/schemas/PlayerLegendStatistics'
        troops:
          $ref: '#/components/schemas/PlayerItemLevelList'
        heroes:
          $ref: '#/components/schemas/PlayerItemLevelList'
        heroEquipment:
          $ref: '#/components/schemas/PlayerItemLevelList'
        spells:
          $ref: '#/components/schemas/PlayerItemLevelList'
        labels:
          $ref: '#/components/schemas/LabelList'
        tag:
          type: string
        name:
          type: string
        expLevel:
          type: integer
        trophies:
          type: integer
        bestTrophies:
          type: integer
        donations:
          type: integer
        donationsReceived:
          type: integer
        builderHallLevel:
          type: integer
        builderBaseTrophies:
          type: integer
        bestBuilderBaseTrophies:
          type: integer
        warStars:
          type: integer
        achievements:
          $ref: '#/components/schemas/PlayerAchievementProgressList'
        clanCapitalContributions:
          type: integer
        playerHouse:
          $ref: '#/components/schemas/PlayerHouse'
    PlayerAchievementProgressList:
      type: array
      items:
        $ref: '#/components/schemas/PlayerAchievementProgress'
    PlayerAchievementProgress:
      type: object
      properties:
        stars:
          type: integer
        value:
          type: integer
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        target:
          type: integer
        info:
          $ref: '#/components/schemas/JsonLocalizedName'
        completionInfo:
          $ref: '#/components/schemas/JsonLocalizedName'
        village:
          type: string
          enum:
            - HOME_VILLAGE
            - BUILDER_BASE
            - CLAN_CAPITAL
    PlayerItemLevelList:
      type: array
      items:
        $ref: '#/components/schemas/PlayerItemLevel'
    PlayerItemLevel:
      type: object
      properties:
        level:
          type: integer
        name:
          $ref: '#/components/schemas/JsonLocalizedName'
        maxLevel:
          type: integer
        village:
          type: string
          enum:
            - HOME_VILLAGE
            - BUILDER_BASE
            - CLAN_CAPITAL
        superTroopIsActive:
          type: boolean
        equipment:
          $ref: '#/components/schemas/PlayerItemLevelList'
    PlayerLegendStatistics:
      type: object
      properties:
        legendTrophies:
          type: integer
        currentSeason:
          $ref: '#/components/schemas/LegendLeagueTournamentSeasonResult'
        bestBuilderBaseSeason:
          $ref: '#/components/schemas/LegendLeagueTournamentSeasonResult'
        previousSeason:
          $ref: '#/components/schemas/LegendLeagueTournamentSeasonResult'
        bestSeason:
          $ref: '#/components/schemas/LegendLeagueTournamentSeasonResult'
        previousBuilderBaseSeason:
          $ref: '#/components/schemas/LegendLeagueTournamentSeasonResult'
    LegendLeagueTournamentSeasonResult:
      type: object
      properties:
        trophies:
          type: integer
        id:
          type: string
        rank:
          type: integer
    PlayerClan:
      type: object
      properties:
        tag:
          type: string
        clanLevel:
          type: integer
        name:
          type: string
        badgeUrls:
          type: object
    ClientError:
      type: object
      properties:
        reason:
          type: string
        message:
          type: string
        type:
          type: string
        detail:
          type: object
paths:
  /clans/{clanTag}/currentwar/leaguegroup              :
    get:
      summary    : Retrieve information about clan's current clan war league group
      description: Retrieve information about clan's current clan war league group
      operationId: getClanWarLeagueGroup
      tags       :
        - clans
      parameters :
        - name       : clanTag
          in         : path
          description: Tag of the clan.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanWarLeagueGroup'
  /players/{playerTag}                                 :
    get:
      summary    : Get player information
      description: |
        Get information about a single player by player tag. Player tags can be found either in game or by from clan member lists. Note that player tags start with hash character '#' and that needs to be URL-encoded properly to work in URL, so for example player tag '#2ABC' would become '%232ABC' in the URL.
      operationId: getPlayer
      tags       :
        - players
      parameters :
        - name       : playerTag
          in         : path
          description: Tag of the player.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/Player'
  /capitalleagues                                      :
    get:
      summary    : List capital leagues
      description: List capital leagues
      operationId: getCapitalLeagues
      tags       :
        - leagues
      parameters :
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/CapitalLeagueList'
  /locations/{locationId}/rankings/clans               :
    get:
      summary    : Get clan rankings for a specific location
      description: Get clan rankings for a specific location
      operationId: getClanRanking
      tags       :
        - locations
      parameters :
        - name       : locationId
          in         : path
          description: Identifier of the location to retrieve.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanRankingList'
  /clanwarleagues/wars/{warTag}                        :
    get:
      summary    : Retrieve information about individual clan war league war
      description: Retrieve information about individual clan war league war
      operationId: getClanWarLeagueWar
      tags       :
        - clans
      parameters :
        - name       : warTag
          in         : path
          description: Tag of the war.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanWarLeagueGroup'
  /goldpass/seasons/current                            :
    get:
      summary    : Get information about the current gold pass season.
      description: Get information about the current gold pass season.
      operationId: getCurrentGoldPassSeason
      tags       :
        - goldpass
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoldPassSeason'
  /clans/{clanTag}/warlog                              :
    get:
      summary    : Retrieve clan's clan war log
      description: Retrieve clan's clan war log
      operationId: getClanWarLog
      tags       :
        - clans
      parameters :
        - name       : clanTag
          in         : path
          description: Tag of the clan.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanWarLog'
  /leagues                                             :
    get:
      summary    : List leagues
      description: List leagues
      operationId: getLeagues
      tags       :
        - leagues
      parameters :
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/LeagueList'
  /locations/{locationId}/rankings/players             :
    get:
      summary    : Get player rankings for a specific location
      description: Get player rankings for a specific location
      operationId: getPlayerRanking
      tags       :
        - locations
      parameters :
        - name       : locationId
          in         : path
          description: Identifier of the location to retrieve.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/PlayerRankingList'
  /leagues/{leagueId}/seasons/{seasonId}               :
    get:
      summary    : Get league season rankings
      description: |
        Get league season rankings. Note that league season information is available only for Legend League.
      operationId: getLeagueSeasonRankings
      tags       :
        - leagues
      parameters :
        - name       : leagueId
          in         : path
          description: Identifier of the league.
          required   : true
          type       : string
        - name       : seasonId
          in         : path
          description: Identifier of the season.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/PlayerRankingList'
  /capitalleagues/{leagueId}                           :
    get:
      summary    : Get capital league information
      description: Get capital league information
      operationId: getCapitalLeague
      tags       :
        - leagues
      parameters :
        - name       : leagueId
          in         : path
          description: Identifier of the league.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/CapitalLeague'
  /clans                                               :
    get:
      summary    : Search clans
      description: |
        Search all clans by name and/or filtering the results using various criteria. At least one filtering criteria must be defined and if name is used as part of search, it is required to be at least three characters long. It is not possible to specify ordering for results so clients should not rely on any specific ordering as that may change in the future releases of the API.
      operationId: searchClans
      tags       :
        - clans
      parameters :
        - name       : name
          in         : query
          description: |
            Search clans by name. If name is used as part of search query, it needs to be at least three characters long. Name search parameter is interpreted as wild card search, so it may appear anywhere in the clan name.
          required   : false
          type       : string
        - name       : warFrequency
          in         : query
          description: Filter by clan war frequency
          required   : false
          type       : string
        - name       : locationId
          in         : query
          description: |
            Filter by clan location identifier. For list of available locations, refer to getLocations operation.
          required   : false
          type       : integer
        - name       : minMembers
          in         : query
          description: Filter by minimum number of clan members
          required   : false
          type       : integer
        - name       : maxMembers
          in         : query
          description: Filter by maximum number of clan members
          required   : false
          type       : integer
        - name       : minClanPoints
          in         : query
          description: Filter by minimum amount of clan points.
          required   : false
          type       : integer
        - name       : minClanLevel
          in         : query
          description: Filter by minimum clan level.
          required   : false
          type       : integer
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : labelIds
          in         : query
          description: Comma separatered list of label IDs to use for filtering results.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanList'
  /builderbaseleagues/{leagueId}                       :
    get:
      summary    : Get Builder Base league information
      description: Get Builder Base league information
      operationId: getBuilderBaseLeague
      tags       :
        - leagues
      parameters :
        - name       : leagueId
          in         : path
          description: Identifier of the league.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/BuilderBaseLeague'
  /locations/{locationId}/rankings/players-builder-base:
    get:
      summary    : Get player Builder Base rankings for a specific location
      description: Get player Builder Base rankings for a specific location
      operationId: getPlayerBuilderBaseRanking
      tags       :
        - locations
      parameters :
        - name       : locationId
          in         : path
          description: Identifier of the location to retrieve.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/PlayerBuilderBaseRankingList'
  /locations/{locationId}/rankings/clans-builder-base  :
    get:
      summary    : Get clan Builder Base rankings for a specific location
      description: Get clan Builder Base rankings for a specific location
      operationId: getClanBuilderBaseRanking
      tags       :
        - locations
      parameters :
        - name       : locationId
          in         : path
          description: Identifier of the location to retrieve.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanBuilderBaseRankingList'
  /clans/{clanTag}/currentwar                          :
    get:
      summary    : Retrieve information about clan's current clan war
      description: Retrieve information about clan's current clan war
      operationId: getCurrentWar
      tags       :
        - clans
      parameters :
        - name       : clanTag
          in         : path
          description: Tag of the clan.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanWar'
  /clans/{clanTag}                                     :
    get:
      summary    : Get clan information
      description: |
        Get information about a single clan by clan tag. Clan tags can be found using clan search operation. Note that clan tags start with hash character '#' and that needs to be URL-encoded properly to work in URL, so for example clan tag '#2ABC' would become '%232ABC' in the URL.
      operationId: getClan
      tags       :
        - clans
      parameters :
        - name       : clanTag
          in         : path
          description: Tag of the clan.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/Clan'
  /players/{playerTag}/verifytoken                     :
    post:
      summary    : Verify player API token that can be found from the game settings.
      description: |
        Verify player API token that can be found from the game settings. This API call can be used to check that players own the game accounts they claim to own as they need to provide the one-time use API token that exists inside the game.
      operationId: verifyToken
      tags       :
        - players
      parameters :
        - name       : playerTag
          in         : path
          description: Tag of the player.
          required   : true
          type       : string
        - name       : body
          in         : body
          description: Request body
          required   : true
          schema     :
            $ref: '#/components/schemas/VerifyTokenRequest'
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/VerifyTokenResponse'
  /builderbaseleagues                                  :
    get:
      summary    : List Builder Base leagues
      description: List Builder Base leagues
      operationId: getBuilderBaseLeagues
      tags       :
        - leagues
      parameters :
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/BuilderBaseLeagueList'
  /leagues/{leagueId}                                  :
    get:
      summary    : Get league information
      description: Get league information
      operationId: getLeague
      tags       :
        - leagues
      parameters :
        - name       : leagueId
          in         : path
          description: Identifier of the league.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/League'
  /leagues/{leagueId}/seasons                          :
    get:
      summary    : Get league seasons
      description: |
        Get league seasons. Note that league season information is available only for Legend League.
      operationId: getLeagueSeasons
      tags       :
        - leagues
      parameters :
        - name       : leagueId
          in         : path
          description: Identifier of the league.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/LeagueSeasonList'
  /clans/{clanTag}/members                             :
    get:
      summary    : List clan members
      description: List clan members.
      operationId: getClanMembers
      tags       :
        - clans
      parameters :
        - name       : clanTag
          in         : path
          description: Tag of the clan.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanMemberList'
  /locations                                           :
    get:
      summary    : List locations
      description: List locations
      operationId: getLocations
      tags       :
        - locations
      parameters :
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/LocationList'
  /labels/players                                      :
    get:
      summary    : List player labels
      description: List player labels
      operationId: getPlayerLabels
      tags       :
        - labels
      parameters :
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/LabelList'
  /warleagues/{leagueId}                               :
    get:
      summary    : Get war league information
      description: Get war league information
      operationId: getWarLeague
      tags       :
        - leagues
      parameters :
        - name       : leagueId
          in         : path
          description: Identifier of the league.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/WarLeague'
  /locations/{locationId}/rankings/capitals            :
    get:
      summary    : Get capital rankings for a specific location
      description: Get capital rankings for a specific location
      operationId: getClanCapitalRanking
      tags       :
        - locations
      parameters :
        - name       : locationId
          in         : path
          description: Identifier of the location to retrieve.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanCapitalRankingList'
  /locations/{locationId}                              :
    get:
      summary    : Get location information
      description: Get information about specific location
      operationId: getLocation
      tags       :
        - locations
      parameters :
        - name       : locationId
          in         : path
          description: Identifier of the location to retrieve.
          required   : true
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/Location'
  /clans/{clanTag}/capitalraidseasons                  :
    get:
      summary    : Retrieve clan's capital raid seasons
      description: Retrieve clan's capital raid seasons
      operationId: getCapitalRaidSeasons
      tags       :
        - clans
      parameters :
        - name       : clanTag
          in         : path
          description: Tag of the clan.
          required   : true
          type       : string
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/ClanCapitalRaidSeasons'
  /labels/clans                                        :
    get:
      summary    : List clan labels
      description: List clan labels
      operationId: getClanLabels
      tags       :
        - labels
      parameters :
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/LabelList'
  /warleagues                                          :
    get:
      summary    : List war leagues
      description: List war leagues
      operationId: getWarLeagues
      tags       :
        - leagues
      parameters :
        - name       : limit
          in         : query
          description: Limit the number of items returned in the response.
          required   : false
          type       : integer
        - name       : after
          in         : query
          description: |
            Return only items that occur after this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
        - name       : before
          in         : query
          description: |
            Return only items that occur before this marker. Before marker can be found from the response, inside the 'paging' property. Note that only after or before can be specified for a request, not both.
          required   : false
          type       : string
      responses  :
        '400':
          $ref: '#/components/responses/BadRequestSpec'
        '403':
          $ref: '#/components/responses/ForbiddenSpec'
        '404':
          $ref: '#/components/responses/NotFoundSpec'
        '429':
          $ref: '#/components/responses/RequestThrottledSpec'
        '500':
          $ref: '#/components/responses/UnknownExceptionSpec'
        '503':
          $ref: '#/components/responses/InMaintenanceSpec'
        '200':
          description: Successful response
          schema     :
            $ref: '#/components/schemas/WarLeagueList'
securityDefinitions:
  JWT:
    type: apiKey
    description: JSON Web Token used as an API key
    name: authorization
    in: header
security:
  -
    JWT: []
