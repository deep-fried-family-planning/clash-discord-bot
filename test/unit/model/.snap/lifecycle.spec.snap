// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`given event.id does not match any node.id > when dispatching an event 1`] = `[(FiberFailure) EventDefect: An error has occurred]`;

exports[`when dispatching an event > initial encoded 1`] = `
"{
  "embeds": [
    {
      "title": "Omni Board",
      "description": "V2 - JSX Pragma"
    },
    {
      "title": "Test Title - NOT markdown",
      "description": "### H3-# \\n<@123456>\\n__$ not a link__"
    }
  ],
  "components": [
    {
      "type": 1,
      "components": [
        {
          "type": 2,
          "style": 1,
          "custom_id": "actions:0:button:0",
          "label": "Start 0"
        },
        {
          "type": 2,
          "style": 2,
          "custom_id": "actions:0:secondary:0",
          "label": "Help"
        }
      ]
    },
    {
      "type": 1,
      "components": [
        {
          "type": 3,
          "custom_id": "message:0:select:0",
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            },
            {
              "value": "3",
              "label": "3",
              "default": true
            }
          ]
        }
      ]
    }
  ],
  "flags": 64
}"
`;

exports[`when dispatching an event > initial hash 1`] = `"eJxrWZydWnlgUWbK6pDU4hLf1OLixPTUpQVF-QXFDcuKSxKTs4ub1iJJWRlMbFxYzHBTAUXMKhfO8khNTEktsjKYAAAOriUq"`;

exports[`when dispatching an event > initial stacks 1`] = `
{
  "id": "TestMessage",
  "key": undefined,
  "props": {
    Symbol(disreact/props): Symbol(disreact/props),
    Symbol(effect/Hash): [Function],
    Symbol(effect/Equal): [Function],
  },
  "stacks": {
    "TestMessage:0": [
      {
        "s": 0,
      },
    ],
    "TestMessage:0:message:0:Header:0": [],
  },
}
`;

exports[`when dispatching an event > rerendered encoded 1`] = `
"{
  "embeds": [
    {
      "title": "Omni Board",
      "description": "V2 - JSX Pragma"
    },
    {
      "title": "Test Title - NOT markdown",
      "description": "### H3-# \\n<@123456>\\n__$ not a link__"
    }
  ],
  "components": [
    {
      "type": 1,
      "components": [
        {
          "type": 2,
          "style": 1,
          "custom_id": "actions:0:button:0",
          "label": "Start 1"
        },
        {
          "type": 2,
          "style": 2,
          "custom_id": "actions:0:secondary:0",
          "label": "Help"
        }
      ]
    },
    {
      "type": 1,
      "components": [
        {
          "type": 3,
          "custom_id": "message:0:select:0",
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            },
            {
              "value": "3",
              "label": "3",
              "default": true
            }
          ]
        }
      ]
    }
  ],
  "flags": 64
}"
`;

exports[`when dispatching an event > rerendered hash 1`] = `"eJxrWZydWnlgUWbK6pDU4hLf1OLixPTUpQVF-QXFDcuKSxKTs4ub1iJJWRlMbFxYzHhTAUXMKhfO8khNTEktsjKYAAAO0iUr"`;

exports[`when dispatching an event > rerendered stacks 1`] = `
{
  "id": "TestMessage",
  "key": undefined,
  "props": {
    Symbol(disreact/props): Symbol(disreact/props),
    Symbol(effect/Hash): [Function],
    Symbol(effect/Equal): [Function],
  },
  "stacks": {
    "TestMessage:0": [
      {
        "s": 1,
      },
    ],
    "TestMessage:0:message:0:Header:0": [],
  },
}
`;

exports[`when initial rendering 1`] = `
"{
  "embeds": [
    {
      "title": "Omni Board",
      "description": "V2 - JSX Pragma"
    },
    {
      "title": "Test Title - NOT markdown",
      "description": "### H3-# \\n<@123456>\\n__$ not a link__"
    }
  ],
  "components": [
    {
      "type": 1,
      "components": [
        {
          "type": 2,
          "style": 1,
          "custom_id": "actions:0:button:0",
          "label": "Start 0"
        },
        {
          "type": 2,
          "style": 2,
          "custom_id": "actions:0:secondary:0",
          "label": "Help"
        }
      ]
    },
    {
      "type": 1,
      "components": [
        {
          "type": 3,
          "custom_id": "message:0:select:0",
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            },
            {
              "value": "3",
              "label": "3",
              "default": true
            }
          ]
        }
      ]
    }
  ],
  "flags": 64
}"
`;

exports[`when rendering async 1`] = `
"{
  "embeds": [
    {
      "description": "MessageAsync"
    }
  ],
  "components": [
    {
      "type": 1,
      "components": [
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonSync:0:button:0",
          "label": "ButtonSync"
        },
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonAsync:0:button:0",
          "label": "ButtonAsync"
        },
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonEffect:0:button:0",
          "label": "ButtonEffect"
        }
      ]
    }
  ],
  "flags": 64
}"
`;

exports[`when rendering effect 1`] = `
"{
  "embeds": [
    {
      "description": "EphemeralEffect"
    }
  ],
  "components": [
    {
      "type": 1,
      "components": [
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonSync:0:button:0",
          "label": "ButtonSync"
        },
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonAsync:0:button:0",
          "label": "ButtonAsync"
        },
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonEffect:0:button:0",
          "label": "ButtonEffect"
        }
      ]
    }
  ],
  "flags": 64
}"
`;

exports[`when rendering sync 1`] = `
"{
  "embeds": [
    {
      "description": "MessageSync"
    }
  ],
  "components": [
    {
      "type": 1,
      "components": [
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonSync:0:button:0",
          "label": "ButtonSync"
        },
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonAsync:0:button:0",
          "label": "ButtonAsync"
        },
        {
          "type": 2,
          "style": 1,
          "custom_id": "ButtonEffect:0:button:0",
          "label": "ButtonEffect"
        }
      ]
    }
  ]
}"
`;

exports[`when rendering sync 2`] = `
{
  "$d": 0,
  "$i": 0,
  "$p": 0,
  "_n": "asdf:0",
  "_s": "asdf:0",
  "name": "asdf",
  "props": {
    Symbol(disreact/props): Symbol(disreact/props),
    Symbol(effect/Hash): [Function],
    Symbol(effect/Equal): [Function],
  },
  "rs": [
    {
      "$d": 1,
      "$i": 0,
      "$p": 0,
      "_n": "asdf:0:message:0",
      "_s": "asdf:0:message:0",
      "handler": undefined,
      "name": "message",
      "props": {
        Symbol(disreact/props): Symbol(disreact/props),
        Symbol(effect/Hash): [Function],
        Symbol(effect/Equal): [Function],
      },
      "rs": [
        {
          "$d": 2,
          "$i": 0,
          "$p": 0,
          "_n": "asdf:0:message:0:embed:0",
          "_s": "message:0:embed:0",
          "handler": undefined,
          "name": "embed",
          "props": {
            Symbol(disreact/props): Symbol(disreact/props),
            Symbol(effect/Hash): [Function],
            Symbol(effect/Equal): [Function],
          },
          "rs": [
            {
              "$d": 3,
              "$i": 0,
              "$p": 0,
              "_n": "asdf:0:message:0:embed:0:undefined:0",
              "_s": "embed:0:undefined:0",
              "text": "MessageSync",
              Symbol(disreact/element): 1,
              Symbol(effect/Hash): [Function],
              Symbol(effect/Equal): [Function],
            },
          ],
          "type": "embed",
          Symbol(disreact/element): 2,
          Symbol(effect/Hash): [Function],
          Symbol(effect/Equal): [Function],
        },
        {
          "$d": 2,
          "$i": 0,
          "$p": 1,
          "_n": "asdf:0:message:0:actions:0",
          "_s": "message:0:actions:0",
          "handler": undefined,
          "name": "actions",
          "props": {
            Symbol(disreact/props): Symbol(disreact/props),
            Symbol(effect/Hash): [Function],
            Symbol(effect/Equal): [Function],
          },
          "rs": [
            {
              "$d": 3,
              "$i": 0,
              "$p": 0,
              "_n": "asdf:0:message:0:actions:0:ButtonSync:0",
              "_s": "actions:0:ButtonSync:0",
              "name": "ButtonSync",
              "props": {
                Symbol(disreact/props): Symbol(disreact/props),
                Symbol(effect/Hash): [Function],
                Symbol(effect/Equal): [Function],
              },
              "rs": [
                {
                  "$d": 4,
                  "$i": 0,
                  "$p": 0,
                  "_n": "asdf:0:message:0:actions:0:ButtonSync:0:button:0",
                  "_s": "ButtonSync:0:button:0",
                  "handler": [Function],
                  "name": "button",
                  "props": {
                    "label": "ButtonSync",
                    Symbol(disreact/props): Symbol(disreact/props),
                    Symbol(effect/Hash): [Function],
                    Symbol(effect/Equal): [Function],
                  },
                  "type": "button",
                  Symbol(disreact/element): 2,
                  Symbol(effect/Hash): [Function],
                  Symbol(effect/Equal): [Function],
                },
              ],
              "type": [Function],
              Symbol(disreact/source): "ButtonSync",
              Symbol(disreact/element): 3,
              Symbol(effect/Hash): [Function],
              Symbol(effect/Equal): [Function],
            },
            {
              "$d": 3,
              "$i": 0,
              "$p": 1,
              "_n": "asdf:0:message:0:actions:0:ButtonAsync:0",
              "_s": "actions:0:ButtonAsync:0",
              "name": "ButtonAsync",
              "props": {
                Symbol(disreact/props): Symbol(disreact/props),
                Symbol(effect/Hash): [Function],
                Symbol(effect/Equal): [Function],
              },
              "rs": [
                {
                  "$d": 4,
                  "$i": 0,
                  "$p": 0,
                  "_n": "asdf:0:message:0:actions:0:ButtonAsync:0:button:0",
                  "_s": "ButtonAsync:0:button:0",
                  "handler": [Function],
                  "name": "button",
                  "props": {
                    "label": "ButtonAsync",
                    Symbol(disreact/props): Symbol(disreact/props),
                    Symbol(effect/Hash): [Function],
                    Symbol(effect/Equal): [Function],
                  },
                  "type": "button",
                  Symbol(disreact/element): 2,
                  Symbol(effect/Hash): [Function],
                  Symbol(effect/Equal): [Function],
                },
              ],
              "type": [Function],
              Symbol(disreact/source): "ButtonAsync",
              Symbol(disreact/element): 3,
              Symbol(effect/Hash): [Function],
              Symbol(effect/Equal): [Function],
            },
            {
              "$d": 3,
              "$i": 0,
              "$p": 2,
              "_n": "asdf:0:message:0:actions:0:ButtonEffect:0",
              "_s": "actions:0:ButtonEffect:0",
              "name": "ButtonEffect",
              "props": {
                Symbol(disreact/props): Symbol(disreact/props),
                Symbol(effect/Hash): [Function],
                Symbol(effect/Equal): [Function],
              },
              "rs": [
                {
                  "$d": 4,
                  "$i": 0,
                  "$p": 0,
                  "_n": "asdf:0:message:0:actions:0:ButtonEffect:0:button:0",
                  "_s": "ButtonEffect:0:button:0",
                  "handler": [Function],
                  "name": "button",
                  "props": {
                    "label": "ButtonEffect",
                    Symbol(disreact/props): Symbol(disreact/props),
                    Symbol(effect/Hash): [Function],
                    Symbol(effect/Equal): [Function],
                  },
                  "type": "button",
                  Symbol(disreact/element): 2,
                  Symbol(effect/Hash): [Function],
                  Symbol(effect/Equal): [Function],
                },
              ],
              "type": [Function],
              Symbol(disreact/source): "ButtonEffect",
              Symbol(disreact/element): 3,
              Symbol(effect/Hash): [Function],
              Symbol(effect/Equal): [Function],
            },
          ],
          "type": "actions",
          Symbol(disreact/element): 2,
          Symbol(effect/Hash): [Function],
          Symbol(effect/Equal): [Function],
        },
      ],
      "type": "message",
      Symbol(disreact/element): 2,
      Symbol(effect/Hash): [Function],
      Symbol(effect/Equal): [Function],
    },
  ],
  "type": [Function],
  Symbol(disreact/source): "asdf",
  Symbol(disreact/element): 3,
  Symbol(effect/Hash): [Function],
  Symbol(effect/Equal): [Function],
}
`;
