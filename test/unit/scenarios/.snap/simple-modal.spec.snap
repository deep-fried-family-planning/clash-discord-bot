// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`when opening 1`] = `
{
  "components": [
    {
      "components": [
        {
          "custom_id": "OpenModal",
          "disabled": undefined,
          "emoji": undefined,
          "label": "Modal",
          "style": 1,
          "type": 2,
        },
      ],
      "type": 1,
    },
  ],
  "content": undefined,
  "embeds": [
    {
      "author": undefined,
      "color": undefined,
      "description": "Hello World!",
      "fields": undefined,
      "footer": undefined,
      "image": {
        "url": "https://dffp.org/s/eJxrXpSZsjY4M7cgJ9U3tbg4MT11aUFRfkFxw7LiksTk7OJGVMmJBwAleBYF",
      },
      "title": undefined,
      "url": undefined,
    },
  ],
  "flags": undefined,
}
`;

exports[`when opening 2`] = `
FiberRuntime {
  "_asyncBlockingOn": {
    "_id": "FiberId",
    "_tag": "None",
  },
  "_asyncInterruptor": [Function],
  "_children": null,
  "_exitValue": null,
  "_fiberId": {
    "_id": "FiberId",
    "_tag": "Runtime",
    "id": 51,
    "startTimeMillis": 1744800535185,
  },
  "_fiberRefs": FiberRefsImpl {
    "locals": Map {
      {
        "_op": "Commit",
        "combine": [Function],
        "commit": [Function],
        "diff": [Function],
        "fork": {},
        "initial": {
          "_id": "Context",
          "services": [],
        },
        "join": [Function],
        "patch": [Function],
        "pipe": [Function],
        Symbol(effect/Effect): {
          "_A": [Function],
          "_E": [Function],
          "_R": [Function],
          "_V": "3.14.10",
        },
        Symbol(effect/Stream): {
          "_A": [Function],
          "_E": [Function],
          "_R": [Function],
          "_V": "3.14.10",
        },
        Symbol(effect/Sink): {
          "_A": [Function],
          "_E": [Function],
          "_In": [Function],
          "_L": [Function],
          "_R": [Function],
        },
        Symbol(effect/Channel): {
          "_Env": [Function],
          "_InDone": [Function],
          "_InElem": [Function],
          "_InErr": [Function],
          "_OutDone": [Function],
          "_OutElem": [Function],
          "_OutErr": [Function],
        },
        Symbol(effect/Equal): [Function],
        Symbol(effect/Hash): [Function],
        Symbol(Symbol.iterator): [Function],
        Symbol(effect/FiberRef): {
          "_A": [Function],
        },
      } => [
        [
          {
            "_id": "FiberId",
            "_tag": "Runtime",
            "id": 51,
            "startTimeMillis": 1744800535185,
          },
          {
            "_id": "Context",
            "services": [
              [
                "disreact/Config",
                DisReactConfig {
                  "baseUrl": "https://dffp.org",
                  "dokenCapacity": 100,
                  "sources": [
                    [Function],
                    [Function],
                  ],
                  "token": "<redacted>",
                },
              ],
              [
                "disreact/DisReactDOM",
                DisReactDOM {
                  "createModal": [MockFunction spy],
                  "createSource": [MockFunction spy],
                  "createUpdate": [MockFunction spy],
                  "deferEdit": [MockFunction spy],
                  "deferSource": [MockFunction spy],
                  "deferUpdate": [MockFunction spy],
                  "discard": [MockFunction spy],
                  "dismount": [MockFunction spy],
                },
              ],
              [
                "disreact/Registry",
                Registry {
                  "checkout": [Function],
                  "register": [Function],
                  "rehydrate": [Function],
                  "version": -252672977,
                },
              ],
              [
                "disreact/Dispatcher",
                Dispatcher {
                  "lock": {
                    "_id": "Effect",
                    "_op": "Commit",
                    "effect_instruction_i0": undefined,
                    "effect_instruction_i1": undefined,
                    "effect_instruction_i2": undefined,
                  },
                  "unlock": {
                    "_id": "Effect",
                    "_op": "WithRuntime",
                    "effect_instruction_i0": [Function],
                    "effect_instruction_i1": undefined,
                    "effect_instruction_i2": undefined,
                  },
                },
              ],
              [
                "disreact/Relay",
                Relay {
                  "awaitOutput": [Function],
                  "awaitStatus": {
                    "_id": "Effect",
                    "_op": "OnFailure",
                    "effect_instruction_i0": {
                      "_id": "Effect",
                      "_op": "Commit",
                      "effect_instruction_i0": undefined,
                      "effect_instruction_i1": undefined,
                      "effect_instruction_i2": undefined,
                    },
                    "effect_instruction_i1": [Function],
                    "effect_instruction_i2": undefined,
                  },
                  "sendStatus": [Function],
                  "setComplete": [Function],
                  "setOutput": [Function],
                },
              ],
              [
                "disreact/Codec",
                Codec {
                  "decodeEvent": [Function],
                  "decodeRequest": [Function],
                  "encodeFinal": [Function],
                  "encoding": {
                    "a": [Function],
                    "actions": [Function],
                    "at": [Function],
                    "author": [Function],
                    "b": [Function],
                    "blockquote": [Function],
                    "br": [Function],
                    "button": [Function],
                    "channels": [Function],
                    "code": [Function],
                    "danger": [Function],
                    "default": [Function],
                    "embed": [Function],
                    "emoji": [Function],
                    "ephemeral": [Function],
                    "field": [Function],
                    "footer": [Function],
                    "h1": [Function],
                    "h2": [Function],
                    "h3": [Function],
                    "i": [Function],
                    "img": [Function],
                    "li": [Function],
                    "link": [Function],
                    "mask": [Function],
                    "mentions": [Function],
                    "message": [Function],
                    "modal": [Function],
                    "ol": [Function],
                    "option": [Function],
                    "p": [Function],
                    "pre": [Function],
                    "premium": [Function],
                    "primary": [Function],
                    "roles": [Function],
                    "s": [Function],
                    "secondary": [Function],
                    "select": [Function],
                    "small": [Function],
                    "success": [Function],
                    "textinput": [Function],
                    "time": [Function],
                    "u": [Function],
                    "ul": [Function],
                    "users": [Function],
                  },
                  "normalization": {
                    "a": "primitive",
                    "actions": "components",
                    "at": "primitive",
                    "author": "author",
                    "b": "primitive",
                    "blockquote": "primitive",
                    "br": "primitive",
                    "button": "button",
                    "channels": "components",
                    "code": "primitive",
                    "danger": "button",
                    "default": "default_values",
                    "embed": "embeds",
                    "emoji": "emoji",
                    "ephemeral": "ephemeral",
                    "field": "fields",
                    "footer": "footer",
                    "h1": "primitive",
                    "h2": "primitive",
                    "h3": "primitive",
                    "i": "primitive",
                    "img": "image",
                    "li": "li",
                    "link": "button",
                    "mask": "mask",
                    "mentions": "components",
                    "message": "message",
                    "modal": "modal",
                    "ol": "ol",
                    "option": "options",
                    "p": "primitive",
                    "pre": "pre",
                    "premium": "button",
                    "primary": "button",
                    "roles": "components",
                    "s": "s",
                    "secondary": "button",
                    "select": "components",
                    "small": "primitive",
                    "success": "button",
                    "textinput": "components",
                    "time": "time",
                    "u": "primitive",
                    "ul": "ul",
                    "users": "components",
                  },
                  "primitive": "primitive",
                },
              ],
              [
                "disreact/DokenMemory",
                DokenMemory {
                  "free": [Function],
                  "load": [Function],
                  "save": [Function],
                },
              ],
              [
                "effect/Layer/CurrentMemoMap",
                MemoMapImpl {
                  "ref": SynchronizedImpl {
                    "get": {
                      "_id": "Effect",
                      "_op": "Sync",
                      "effect_instruction_i0": [Function],
                      "effect_instruction_i1": undefined,
                      "effect_instruction_i2": undefined,
                    },
                    "ref": RefImpl {
                      "get": {
                        "_id": "Effect",
                        "_op": "Sync",
                        "effect_instruction_i0": [Function],
                        "effect_instruction_i1": undefined,
                        "effect_instruction_i2": undefined,
                      },
                      "ref": {
                        "_id": "MutableRef",
                        "current": Map {},
                      },
                      Symbol(effect/Ref): {
                        "_A": [Function],
                      },
                      Symbol(effect/Readable): Symbol(effect/Readable),
                    },
                    "withLock": [Function],
                    Symbol(effect/Ref/SynchronizedRef): {
                      "_A": [Function],
                    },
                    Symbol(effect/Ref): {
                      "_A": [Function],
                    },
                    Symbol(effect/Readable): Symbol(effect/Readable),
                  },
                  Symbol(effect/Layer/MemoMap): Symbol(effect/Layer/MemoMap),
                },
              ],
            ],
          },
        ],
        [
          {
            "_id": "FiberId",
            "_tag": "Runtime",
            "id": 20,
            "startTimeMillis": 1744800535172,
          },
          {
            "_id": "Context",
            "services": [
              [
                "disreact/Config",
                DisReactConfig {
                  "baseUrl": "https://dffp.org",
                  "dokenCapacity": 100,
                  "sources": [
                    [Function],
                    [Function],
                  ],
                  "token": "<redacted>",
                },
              ],
              [
                "disreact/DisReactDOM",
                DisReactDOM {
                  "createModal": [MockFunction spy],
                  "createSource": [MockFunction spy],
                  "createUpdate": [MockFunction spy],
                  "deferEdit": [MockFunction spy],
                  "deferSource": [MockFunction spy],
                  "deferUpdate": [MockFunction spy],
                  "discard": [MockFunction spy],
                  "dismount": [MockFunction spy],
                },
              ],
              [
                "disreact/Registry",
                Registry {
                  "checkout": [Function],
                  "register": [Function],
                  "rehydrate": [Function],
                  "version": -252672977,
                },
              ],
              [
                "disreact/Dispatcher",
                Dispatcher {
                  "lock": {
                    "_id": "Effect",
                    "_op": "Commit",
                    "effect_instruction_i0": undefined,
                    "effect_instruction_i1": undefined,
                    "effect_instruction_i2": undefined,
                  },
                  "unlock": {
                    "_id": "Effect",
                    "_op": "WithRuntime",
                    "effect_instruction_i0": [Function],
                    "effect_instruction_i1": undefined,
                    "effect_instruction_i2": undefined,
                  },
                },
              ],
              [
                "disreact/Relay",
                Relay {
                  "awaitOutput": [Function],
                  "awaitStatus": {
                    "_id": "Effect",
                    "_op": "OnFailure",
                    "effect_instruction_i0": {
                      "_id": "Effect",
                      "_op": "Commit",
                      "effect_instruction_i0": undefined,
                      "effect_instruction_i1": undefined,
                      "effect_instruction_i2": undefined,
                    },
                    "effect_instruction_i1": [Function],
                    "effect_instruction_i2": undefined,
                  },
                  "sendStatus": [Function],
                  "setComplete": [Function],
                  "setOutput": [Function],
                },
              ],
              [
                "disreact/Codec",
                Codec {
                  "decodeEvent": [Function],
                  "decodeRequest": [Function],
                  "encodeFinal": [Function],
                  "encoding": {
                    "a": [Function],
                    "actions": [Function],
                    "at": [Function],
                    "author": [Function],
                    "b": [Function],
                    "blockquote": [Function],
                    "br": [Function],
                    "button": [Function],
                    "channels": [Function],
                    "code": [Function],
                    "danger": [Function],
                    "default": [Function],
                    "embed": [Function],
                    "emoji": [Function],
                    "ephemeral": [Function],
                    "field": [Function],
                    "footer": [Function],
                    "h1": [Function],
                    "h2": [Function],
                    "h3": [Function],
                    "i": [Function],
                    "img": [Function],
                    "li": [Function],
                    "link": [Function],
                    "mask": [Function],
                    "mentions": [Function],
                    "message": [Function],
                    "modal": [Function],
                    "ol": [Function],
                    "option": [Function],
                    "p": [Function],
                    "pre": [Function],
                    "premium": [Function],
                    "primary": [Function],
                    "roles": [Function],
                    "s": [Function],
                    "secondary": [Function],
                    "select": [Function],
                    "small": [Function],
                    "success": [Function],
                    "textinput": [Function],
                    "time": [Function],
                    "u": [Function],
                    "ul": [Function],
                    "users": [Function],
                  },
                  "normalization": {
                    "a": "primitive",
                    "actions": "components",
                    "at": "primitive",
                    "author": "author",
                    "b": "primitive",
                    "blockquote": "primitive",
                    "br": "primitive",
                    "button": "button",
                    "channels": "components",
                    "code": "primitive",
                    "danger": "button",
                    "default": "default_values",
                    "embed": "embeds",
                    "emoji": "emoji",
                    "ephemeral": "ephemeral",
                    "field": "fields",
                    "footer": "footer",
                    "h1": "primitive",
                    "h2": "primitive",
                    "h3": "primitive",
                    "i": "primitive",
                    "img": "image",
                    "li": "li",
                    "link": "button",
                    "mask": "mask",
                    "mentions": "components",
                    "message": "message",
                    "modal": "modal",
                    "ol": "ol",
                    "option": "options",
                    "p": "primitive",
                    "pre": "pre",
                    "premium": "button",
                    "primary": "button",
                    "roles": "components",
                    "s": "s",
                    "secondary": "button",
                    "select": "components",
                    "small": "primitive",
                    "success": "button",
                    "textinput": "components",
                    "time": "time",
                    "u": "primitive",
                    "ul": "ul",
                    "users": "components",
                  },
                  "primitive": "primitive",
                },
              ],
              [
                "disreact/DokenMemory",
                DokenMemory {
                  "free": [Function],
                  "load": [Function],
                  "save": [Function],
                },
              ],
            ],
          },
        ],
      ],
      {
        "_op": "Commit",
        "combine": [Function],
        "commit": [Function],
        "diff": [Function],
        "fork": [Function],
        "initial": MixedScheduler {
          "maxNextTickBeforeTimer": 2048,
          "running": true,
          "tasks": PriorityBuckets {
            "buckets": [
              [
                0,
                [
                  [Function],
                ],
              ],
            ],
          },
        },
        "join": [Function],
        "patch": [Function],
        "pipe": [Function],
        Symbol(effect/Effect): {
          "_A": [Function],
          "_E": [Function],
          "_R": [Function],
          "_V": "3.14.10",
        },
        Symbol(effect/Stream): {
          "_A": [Function],
          "_E": [Function],
          "_R": [Function],
          "_V": "3.14.10",
        },
        Symbol(effect/Sink): {
          "_A": [Function],
          "_E": [Function],
          "_In": [Function],
          "_L": [Function],
          "_R": [Function],
        },
        Symbol(effect/Channel): {
          "_Env": [Function],
          "_InDone": [Function],
          "_InElem": [Function],
          "_InErr": [Function],
          "_OutDone": [Function],
          "_OutElem": [Function],
          "_OutErr": [Function],
        },
        Symbol(effect/Equal): [Function],
        Symbol(effect/Hash): [Function],
        Symbol(Symbol.iterator): [Function],
        Symbol(effect/FiberRef): {
          "_A": [Function],
        },
      } => [
        [
          {
            "_id": "FiberId",
            "_tag": "Runtime",
            "id": 20,
            "startTimeMillis": 1744800535172,
          },
          MixedScheduler {
            "maxNextTickBeforeTimer": 2048,
            "running": true,
            "tasks": PriorityBuckets {
              "buckets": [
                [
                  0,
                  [
                    [Function],
                  ],
                ],
              ],
            },
          },
        ],
      ],
      {
        "_op": "Commit",
        "combine": [Function],
        "commit": [Function],
        "diff": [Function],
        "fork": 0,
        "initial": 0,
        "join": [Function],
        "patch": [Function],
        "pipe": [Function],
        Symbol(effect/Effect): {
          "_A": [Function],
          "_E": [Function],
          "_R": [Function],
          "_V": "3.14.10",
        },
        Symbol(effect/Stream): {
          "_A": [Function],
          "_E": [Function],
          "_R": [Function],
          "_V": "3.14.10",
        },
        Symbol(effect/Sink): {
          "_A": [Function],
          "_E": [Function],
          "_In": [Function],
          "_L": [Function],
          "_R": [Function],
        },
        Symbol(effect/Channel): {
          "_Env": [Function],
          "_InDone": [Function],
          "_InElem": [Function],
          "_InErr": [Function],
          "_OutDone": [Function],
          "_OutElem": [Function],
          "_OutErr": [Function],
        },
        Symbol(effect/Equal): [Function],
        Symbol(effect/Hash): [Function],
        Symbol(Symbol.iterator): [Function],
        Symbol(effect/FiberRef): {
          "_A": [Function],
        },
      } => [
        [
          {
            "_id": "FiberId",
            "_tag": "Runtime",
            "id": 20,
            "startTimeMillis": 1744800535172,
          },
          37,
        ],
      ],
    },
    Symbol(effect/FiberRefs): Symbol(effect/FiberRefs),
  },
  "_isYielding": false,
  "_observers": [
    [Function],
  ],
  "_queue": [
    {
      "_tag": "Resume",
      "effect": {
        "_id": "Exit",
        "_tag": "Success",
        "value": 1,
      },
    },
  ],
  "_running": false,
  "_stack": [
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 1,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 257,
    },
    {
      "_id": "Effect",
      "_op": "OnSuccessAndFailure",
      "effect_instruction_i0": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 257,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "effect_instruction_i1": [Function],
      "effect_instruction_i2": [Function],
    },
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 257,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 1,
    },
    {
      "_id": "Effect",
      "_op": "OnSuccess",
      "effect_instruction_i0": {
        "_id": "Effect",
        "_op": "OnSuccess",
        "effect_instruction_i0": {
          "_id": "Effect",
          "_op": "Commit",
          "effect_instruction_i0": undefined,
          "effect_instruction_i1": undefined,
          "effect_instruction_i2": undefined,
        },
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "effect_instruction_i1": [Function],
      "effect_instruction_i2": undefined,
    },
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 1,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 257,
    },
    {
      "_id": "Effect",
      "_op": "OnSuccess",
      "effect_instruction_i0": {
        "_id": "Effect",
        "_op": "OnSuccessAndFailure",
        "effect_instruction_i0": {
          "_id": "Effect",
          "_op": "Commit",
          "effect_instruction_i0": undefined,
          "effect_instruction_i1": undefined,
          "effect_instruction_i2": undefined,
        },
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": [Function],
      },
      "effect_instruction_i1": [Function],
      "effect_instruction_i2": undefined,
    },
    {
      "_id": "Effect",
      "_op": "OnSuccessAndFailure",
      "effect_instruction_i0": {
        "_id": "Effect",
        "_op": "Commit",
        "effect_instruction_i0": undefined,
        "effect_instruction_i1": undefined,
        "effect_instruction_i2": undefined,
      },
      "effect_instruction_i1": [Function],
      "effect_instruction_i2": [Function],
    },
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 257,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 1,
    },
    {
      "_id": "Effect",
      "_op": "OnSuccess",
      "effect_instruction_i0": {
        "_id": "Effect",
        "_op": "Commit",
        "effect_instruction_i0": [Function],
        "effect_instruction_i1": undefined,
        "effect_instruction_i2": undefined,
      },
      "effect_instruction_i1": [Function],
      "effect_instruction_i2": undefined,
    },
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 1,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 257,
    },
    {
      "_id": "Effect",
      "_op": "OnSuccess",
      "effect_instruction_i0": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 257,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "effect_instruction_i1": [Function],
      "effect_instruction_i2": undefined,
    },
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 257,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 1,
    },
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 1,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 257,
    },
    {
      "_id": "Effect",
      "_op": "OnSuccessAndFailure",
      "effect_instruction_i0": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 257,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "effect_instruction_i1": [Function],
      "effect_instruction_i2": [Function],
    },
    RevertFlags {
      "_op": "RevertFlags",
      "op": {
        "_id": "Effect",
        "_op": "UpdateRuntimeFlags",
        "effect_instruction_i0": 257,
        "effect_instruction_i1": [Function],
        "effect_instruction_i2": undefined,
      },
      "patch": 1,
    },
  ],
  "_steps": [],
  "currentContext": {
    "_id": "Context",
    "services": [
      [
        "disreact/Config",
        DisReactConfig {
          "baseUrl": "https://dffp.org",
          "dokenCapacity": 100,
          "sources": [
            [Function],
            [Function],
          ],
          "token": "<redacted>",
        },
      ],
      [
        "disreact/DisReactDOM",
        DisReactDOM {
          "createModal": [MockFunction spy],
          "createSource": [MockFunction spy],
          "createUpdate": [MockFunction spy],
          "deferEdit": [MockFunction spy],
          "deferSource": [MockFunction spy],
          "deferUpdate": [MockFunction spy],
          "discard": [MockFunction spy],
          "dismount": [MockFunction spy],
        },
      ],
      [
        "disreact/Registry",
        Registry {
          "checkout": [Function],
          "register": [Function],
          "rehydrate": [Function],
          "version": -252672977,
        },
      ],
      [
        "disreact/Dispatcher",
        Dispatcher {
          "lock": {
            "_id": "Effect",
            "_op": "Commit",
            "effect_instruction_i0": undefined,
            "effect_instruction_i1": undefined,
            "effect_instruction_i2": undefined,
          },
          "unlock": {
            "_id": "Effect",
            "_op": "WithRuntime",
            "effect_instruction_i0": [Function],
            "effect_instruction_i1": undefined,
            "effect_instruction_i2": undefined,
          },
        },
      ],
      [
        "disreact/Relay",
        Relay {
          "awaitOutput": [Function],
          "awaitStatus": {
            "_id": "Effect",
            "_op": "OnFailure",
            "effect_instruction_i0": {
              "_id": "Effect",
              "_op": "Commit",
              "effect_instruction_i0": undefined,
              "effect_instruction_i1": undefined,
              "effect_instruction_i2": undefined,
            },
            "effect_instruction_i1": [Function],
            "effect_instruction_i2": undefined,
          },
          "sendStatus": [Function],
          "setComplete": [Function],
          "setOutput": [Function],
        },
      ],
      [
        "disreact/Codec",
        Codec {
          "decodeEvent": [Function],
          "decodeRequest": [Function],
          "encodeFinal": [Function],
          "encoding": {
            "a": [Function],
            "actions": [Function],
            "at": [Function],
            "author": [Function],
            "b": [Function],
            "blockquote": [Function],
            "br": [Function],
            "button": [Function],
            "channels": [Function],
            "code": [Function],
            "danger": [Function],
            "default": [Function],
            "embed": [Function],
            "emoji": [Function],
            "ephemeral": [Function],
            "field": [Function],
            "footer": [Function],
            "h1": [Function],
            "h2": [Function],
            "h3": [Function],
            "i": [Function],
            "img": [Function],
            "li": [Function],
            "link": [Function],
            "mask": [Function],
            "mentions": [Function],
            "message": [Function],
            "modal": [Function],
            "ol": [Function],
            "option": [Function],
            "p": [Function],
            "pre": [Function],
            "premium": [Function],
            "primary": [Function],
            "roles": [Function],
            "s": [Function],
            "secondary": [Function],
            "select": [Function],
            "small": [Function],
            "success": [Function],
            "textinput": [Function],
            "time": [Function],
            "u": [Function],
            "ul": [Function],
            "users": [Function],
          },
          "normalization": {
            "a": "primitive",
            "actions": "components",
            "at": "primitive",
            "author": "author",
            "b": "primitive",
            "blockquote": "primitive",
            "br": "primitive",
            "button": "button",
            "channels": "components",
            "code": "primitive",
            "danger": "button",
            "default": "default_values",
            "embed": "embeds",
            "emoji": "emoji",
            "ephemeral": "ephemeral",
            "field": "fields",
            "footer": "footer",
            "h1": "primitive",
            "h2": "primitive",
            "h3": "primitive",
            "i": "primitive",
            "img": "image",
            "li": "li",
            "link": "button",
            "mask": "mask",
            "mentions": "components",
            "message": "message",
            "modal": "modal",
            "ol": "ol",
            "option": "options",
            "p": "primitive",
            "pre": "pre",
            "premium": "button",
            "primary": "button",
            "roles": "components",
            "s": "s",
            "secondary": "button",
            "select": "components",
            "small": "primitive",
            "success": "button",
            "textinput": "components",
            "time": "time",
            "u": "primitive",
            "ul": "ul",
            "users": "components",
          },
          "primitive": "primitive",
        },
      ],
      [
        "disreact/DokenMemory",
        DokenMemory {
          "free": [Function],
          "load": [Function],
          "save": [Function],
        },
      ],
      [
        "effect/Layer/CurrentMemoMap",
        MemoMapImpl {
          "ref": SynchronizedImpl {
            "get": {
              "_id": "Effect",
              "_op": "Sync",
              "effect_instruction_i0": [Function],
              "effect_instruction_i1": undefined,
              "effect_instruction_i2": undefined,
            },
            "ref": RefImpl {
              "get": {
                "_id": "Effect",
                "_op": "Sync",
                "effect_instruction_i0": [Function],
                "effect_instruction_i1": undefined,
                "effect_instruction_i2": undefined,
              },
              "ref": {
                "_id": "MutableRef",
                "current": Map {},
              },
              Symbol(effect/Ref): {
                "_A": [Function],
              },
              Symbol(effect/Readable): Symbol(effect/Readable),
            },
            "withLock": [Function],
            Symbol(effect/Ref/SynchronizedRef): {
              "_A": [Function],
            },
            Symbol(effect/Ref): {
              "_A": [Function],
            },
            Symbol(effect/Readable): Symbol(effect/Readable),
          },
          Symbol(effect/Layer/MemoMap): Symbol(effect/Layer/MemoMap),
        },
      ],
    ],
  },
  "currentDefaultServices": {
    "_id": "Context",
    "services": [
      [
        "effect/Clock",
        ClockImpl {
          "currentTimeMillis": {
            "_id": "Effect",
            "_op": "Sync",
            "effect_instruction_i0": [Function],
            "effect_instruction_i1": undefined,
            "effect_instruction_i2": undefined,
          },
          "currentTimeNanos": {
            "_id": "Effect",
            "_op": "Sync",
            "effect_instruction_i0": [Function],
            "effect_instruction_i1": undefined,
            "effect_instruction_i2": undefined,
          },
          Symbol(effect/Clock): Symbol(effect/Clock),
        },
      ],
      [
        "effect/Console",
        {
          "assert": [Function],
          "clear": {
            "_id": "Effect",
            "_op": "Sync",
            "effect_instruction_i0": [Function],
            "effect_instruction_i1": undefined,
            "effect_instruction_i2": undefined,
          },
          "count": [Function],
          "countReset": [Function],
          "debug": [Function],
          "dir": [Function],
          "dirxml": [Function],
          "error": [Function],
          "group": [Function],
          "groupEnd": {
            "_id": "Effect",
            "_op": "Sync",
            "effect_instruction_i0": [Function],
            "effect_instruction_i1": undefined,
            "effect_instruction_i2": undefined,
          },
          "info": [Function],
          "log": [Function],
          "table": [Function],
          "time": [Function],
          "timeEnd": [Function],
          "timeLog": [Function],
          "trace": [Function],
          "unsafe": Console {
            "Console": [Function],
            "assert": [Function],
            "clear": [Function],
            "count": [Function],
            "countReset": [Function],
            "debug": [Function],
            "dir": [Function],
            "dirxml": [Function],
            "error": [Function],
            "group": [Function],
            "groupCollapsed": [Function],
            "groupEnd": [Function],
            "info": [Function],
            "log": [Function],
            "table": [Function],
            "time": [Function],
            "timeEnd": [Function],
            "timeLog": [Function],
            "trace": [Function],
            "warn": [Function],
          },
          "warn": [Function],
          Symbol(effect/Console): Symbol(effect/Console),
        },
      ],
      [
        "effect/Random",
        RandomImpl {
          "PRNG": PCGRandom {
            "_state": Int32Array [
              -512186365,
              -676477291,
              335903614,
              -144211633,
            ],
          },
          "seed": -34990897,
          Symbol(effect/Random): Symbol(effect/Random),
        },
      ],
      [
        "effect/ConfigProvider",
        {
          "flattened": {
            "enumerateChildren": [Function],
            "load": [Function],
            "patch": {
              "_tag": "Empty",
            },
            Symbol(effect/ConfigProviderFlat): Symbol(effect/ConfigProviderFlat),
          },
          "load": [Function],
          "pipe": [Function],
          Symbol(effect/ConfigProvider): Symbol(effect/ConfigProvider),
        },
      ],
      [
        "effect/Tracer",
        {
          "context": [Function],
          "span": [Function],
          Symbol(effect/Tracer): Symbol(effect/Tracer),
        },
      ],
    ],
  },
  "currentOpCount": 42,
  "currentRuntimeFlags": 37,
  "currentScheduler": MixedScheduler {
    "maxNextTickBeforeTimer": 2048,
    "running": true,
    "tasks": PriorityBuckets {
      "buckets": [
        [
          0,
          [
            [Function],
          ],
        ],
      ],
    },
  },
  "currentSpan": undefined,
  "currentSupervisor": Const {
    "effect": {
      "_id": "Exit",
      "_tag": "Success",
      "value": undefined,
    },
    Symbol(effect/Supervisor): {
      "_T": [Function],
    },
  },
  "currentTracer": {
    "context": [Function],
    "span": [Function],
    Symbol(effect/Tracer): Symbol(effect/Tracer),
  },
  "run": [Function],
  Symbol(effect/Fiber): {
    "_A": [Function],
    "_E": [Function],
  },
}
`;
